//This script will create a basic snowman for you


proc createSnowMan(float $ballSizes[], float $overLap) {
    int $moveDist = 0;
    string $currentObj[];
    float $middleBallSize = $ballSizes[size($ballSizes)/2];
    string $middleBall;
    //creating the snowballs
    for ($i = 0; $i < size($ballSizes); $i++){
        /*
        This small chain of if statements (and also the one at the end of the for loop) is here because
        my initial method for adding to the move distance was as follows:
            >Add the radius of the current ball to the move distance
            >Create the current ball as the proper size and move it upwards the current move distance
            >Add the radius*overlap to the move distance
        this worked fine and allowed me to set the overlap of the balls to whatever
        I wanted (I usually like it at 0.75), but I saw issues when there was a very big ball before a very small one.
        The reason this causes issues is because:
            >Big ball adds its radius to the move distance and then is placed there (this part is fine)
            >THEN the big ball adds is radius*overlap to the move distance - this is where the issue arrises
                -If the big ball's radius is, say, 6 and the next ball's radius is 1,
                even an overlap like 0.75 means that the small ball is placed entirely WITHIN
                the large ball before it because it's being placed with the overlap based on the
                massive ball before it
        How my if statements fix the issue:
            Basically the chain of if statements checks the raidus of the ball and compares it to the ones around it.
            Then it does overlap stuff with whichever is the smallest ball.
            This means that even with a radius 6 ball before a radius 1 ball, the radius 1 ball will still not be
            entirely swallowed up by the radius 6 ball because the overlap between the two is based on the small one,
            NOT the big one
        */
        if ($i == 0){
            $moveDist = $ballSizes[$i];
        }
        else if ($ballSizes[$i] <= $ballSizes[$i - 1]){
            $moveDist += $ballSizes[$i]*$overLap;
        }
        else if ($ballSizes[$i] > $ballSizes[$i - 1]){
            $moveDist += $ballSizes[$i];
        }
        $currentObj = `polySphere -radius $ballSizes[$i] -subdivisionsX 20 -subdivisionsY 20 -axis 0 1 0 -createUVs 2 -constructionHistory 1 -name "snowmanBall0"`;
        if ($i == size($ballSizes)/2){
            $middleBall = $currentObj[0];
        }
        move -worldSpace -worldSpaceDistance 0 $moveDist 0 $currentObj[0];
        if ($i == size($ballSizes) - 1){
            $moveDist += 0;
        }
        else if ($ballSizes[$i] < $ballSizes[$i + 1]){
            $moveDist += $ballSizes[$i]*$overLap;
        }
        else if ($ballSizes[$i] >= $ballSizes[$i + 1]){
            $moveDist += $ballSizes[$i];
        }
    }
    float $lastBallSize = $ballSizes[size($ballSizes) - 1];
    //creating the nose
    $currentObj = `polyCone -radius ($lastBallSize/4) -height (1.5*$lastBallSize) -subdivisionsX 20 -subdivisionsY 1 -subdivisionsZ 0 -axis 0 1 0 -roundCap 0 -createUVs 3 -constructionHistory 1 -name "snowmanNose"`;
    move -worldSpace -worldSpaceDistance 0 $moveDist ($lastBallSize*1.3) $currentObj[0];
    rotate -relative -worldSpace -forceOrderXYZ 90 0 0 $currentObj[0];
    //creating the eyes
    for ($i = -1; $i <= 1; $i+=2){
        $currentObj = `polySphere -radius ($lastBallSize/7) -subdivisionsX 20 -subdivisionsY 20 -axis 0 1 0 -createUVs 2 -constructionHistory 1 -name "snowmanEye0"`;
        move -worldSpace -worldSpaceDistance ($i*$lastBallSize/3) ($moveDist + $lastBallSize/10) ($lastBallSize*0.9) $currentObj[0];
    }
    //creating the hat
    $currentObj = `polyCylinder -radius $lastBallSize -height ($lastBallSize/8) -subdivisionsX 20 -subdivisionsY 1 -subdivisionsZ 1 -axis 0 1 0 -roundCap 0 -createUVs 3 -constructionHistory 1 -name "hatBase"`;
    move -worldSpace -worldSpaceDistance 0 ($moveDist + $lastBallSize*$overLap) 0 $currentObj[0];
    $currentObj = `polyCylinder -radius ($lastBallSize*0.7) -height ($lastBallSize*1.25) -subdivisionsX 20 -subdivisionsY 1 -subdivisionsZ 1 -axis 0 1 0 -roundCap 0 -createUVs 3 -constructionHistory 1 -name "hatTop"`;
    move -worldSpace -worldSpaceDistance 0 ($moveDist + $lastBallSize*$overLap + ($lastBallSize*1.25)/2) 0 $currentObj[0];
    //creating the arms
    float $armDist = `getAttr($middleBall + ".translateY")`;
    for ($i = -1; $i <= 1; $i += 2){
        $currentObj = `polyCylinder -radius ($middleBallSize/8) -height ($middleBallSize*2) -subdivisionsX 20 -subdivisionsY 1 -subdivisionsZ 1 -axis 0 1 0 -roundCap 0 -createUVs 3 -constructionHistory 1 -name "armCylinder0"`;
        move -worldSpace -worldSpaceDistance ($i*$middleBallSize*1.2) ($armDist + $middleBallSize*0.3) 0 $currentObj[0];
        rotate -relative -worldSpace -forceOrderXYZ 0 0 ($i*-60) $currentObj[0];
        $currentObj = `polyCylinder -radius ($middleBallSize/12) -height ($middleBallSize/3) -subdivisionsX 20 -subdivisionsY 1 -subdivisionsZ 1 -axis 0 1 0 -roundCap 0 -createUVs 3 -constructionHistory 1 -name "handCylinder0"`;
        move -worldSpace -worldSpaceDistance ($i*$middleBallSize*1.7) ($armDist + $middleBallSize*0.85) 0 $currentObj[0];
        rotate -relative -worldSpace -forceOrderXYZ 0 0 ($i*20) $currentObj[0];
    }
    //creating the coal buttons
    for ($i = 1; $i >= -1; $i--){
        $currentObj = `polySphere -radius ($middleBallSize/8) -subdivisionsX 20 -subdivisionsY 20 -axis 0 1 0 -createUVs 2 -constructionHistory 1 -name "coalButton0"`;
        move -worldSpace -worldSpaceDistance 0 ($armDist + $i*($middleBallSize/3)) ($middleBallSize - abs($i*$middleBallSize/18)) $currentObj[0];
    }
}

//createSnowMan({6,1,2,4,5,3}, 0.75);
//createSnowMan({5.5,4,3}, 0.75);
//createSnowMan({3}, 0.8);
createSnowMan({6,3,4,2}, 1);




//
//
//
//



proc createSnowManOriginalProc(float $ballSizes[], float $overLap) {
    int $moveDist = 0;
    string $currentObj[];
    float $middleBallSize = $ballSizes[size($ballSizes)/2];
    string $middleBall;
    //creating the snowballs
    for ($i = 0; $i < size($ballSizes); $i++){
        $moveDist += $ballSizes[$i];
        $currentObj = `polySphere -radius $ballSizes[$i] -subdivisionsX 20 -subdivisionsY 20 -axis 0 1 0 -createUVs 2 -constructionHistory 1 -name "snowmanBall0"`;
        if ($i == size($ballSizes)/2){
            $middleBall = $currentObj[0];
        }
        move -worldSpace -worldSpaceDistance 0 $moveDist 0 $currentObj[0];
        $moveDist += $ballSizes[$i]*$overLap;
    }
    float $lastBallSize = $ballSizes[size($ballSizes) - 1];
    $moveDist -= $lastBallSize*$overLap;
    //creating the nose
    $currentObj = `polyCone -radius ($lastBallSize/4) -height (1.5*$lastBallSize) -subdivisionsX 20 -subdivisionsY 1 -subdivisionsZ 0 -axis 0 1 0 -roundCap 0 -createUVs 3 -constructionHistory 1 -name "snowmanNose"`;
    move -worldSpace -worldSpaceDistance 0 $moveDist ($lastBallSize*1.3) $currentObj[0];
    rotate -relative -worldSpace -forceOrderXYZ 90 0 0 $currentObj[0];
    //creating the eyes
    for ($i = -1; $i <= 1; $i+=2){
        $currentObj = `polySphere -radius ($lastBallSize/7) -subdivisionsX 20 -subdivisionsY 20 -axis 0 1 0 -createUVs 2 -constructionHistory 1 -name "snowmanEye0"`;
        move -worldSpace -worldSpaceDistance ($i*$lastBallSize/3) ($moveDist + $lastBallSize/10) ($lastBallSize*0.9) $currentObj[0];
    }
    //creating the hat
    $currentObj = `polyCylinder -radius $lastBallSize -height ($lastBallSize/8) -subdivisionsX 20 -subdivisionsY 1 -subdivisionsZ 1 -axis 0 1 0 -roundCap 0 -createUVs 3 -constructionHistory 1 -name "hatBase"`;
    move -worldSpace -worldSpaceDistance 0 ($moveDist + $lastBallSize*$overLap) 0 $currentObj[0];
    $currentObj = `polyCylinder -radius ($lastBallSize*0.7) -height ($lastBallSize*1.25) -subdivisionsX 20 -subdivisionsY 1 -subdivisionsZ 1 -axis 0 1 0 -roundCap 0 -createUVs 3 -constructionHistory 1 -name "hatTop"`;
    move -worldSpace -worldSpaceDistance 0 ($moveDist + $lastBallSize*$overLap + ($lastBallSize*1.25)/2) 0 $currentObj[0];
    //creating the arms
    float $armDist = `getAttr($middleBall + ".translateY")`;
    for ($i = -1; $i <= 1; $i += 2){
        $currentObj = `polyCylinder -radius ($middleBallSize/8) -height ($middleBallSize*2) -subdivisionsX 20 -subdivisionsY 1 -subdivisionsZ 1 -axis 0 1 0 -roundCap 0 -createUVs 3 -constructionHistory 1 -name "armCylinder0"`;
        move -worldSpace -worldSpaceDistance ($i*$middleBallSize*1.2) ($armDist + $middleBallSize*0.3) 0 $currentObj[0];
        rotate -relative -worldSpace -forceOrderXYZ 0 0 ($i*-60) $currentObj[0];
        $currentObj = `polyCylinder -radius ($middleBallSize/12) -height ($middleBallSize/3) -subdivisionsX 20 -subdivisionsY 1 -subdivisionsZ 1 -axis 0 1 0 -roundCap 0 -createUVs 3 -constructionHistory 1 -name "handCylinder0"`;
        move -worldSpace -worldSpaceDistance ($i*$middleBallSize*1.7) ($armDist + $middleBallSize*0.85) 0 $currentObj[0];
        rotate -relative -worldSpace -forceOrderXYZ 0 0 ($i*20) $currentObj[0];
    }
    //creating the coal buttons
    for ($i = 1; $i >= -1; $i--){
        $currentObj = `polySphere -radius ($middleBallSize/8) -subdivisionsX 20 -subdivisionsY 20 -axis 0 1 0 -createUVs 2 -constructionHistory 1 -name "coalButton0"`;
        move -worldSpace -worldSpaceDistance 0 ($armDist + $i*($middleBallSize/3)) ($middleBallSize - abs($i*$middleBallSize/18)) $currentObj[0];
    }
}

//createSnowManOriginalProc({6,1,2,4,5,3}, 0.75);